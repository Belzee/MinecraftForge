--- ../src_base/minecraft_server/net/minecraft/src/ItemInWorldManager.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft_server/net/minecraft/src/ItemInWorldManager.java	0000-00-00 00:00:00.000000000 -0000
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import net.minecraft.src.forge.ForgeHooks;
+
 public class ItemInWorldManager
 {
     public World thisWorld;
@@ -71,7 +73,7 @@
             if (j != 0)
             {
                 Block block = Block.blocksList[j];
-                float f = block.blockStrength(thisPlayer) * (float)(i + 1);
+                float f = block.blockStrength(thisWorld, thisPlayer, field_22049_l, field_22048_m, field_22047_n) * (float)(i + 1);
                 if (f >= 1.0F)
                 {
                     field_22050_k = false;
@@ -99,7 +101,7 @@
         {
             Block.blocksList[i1].onBlockClicked(thisWorld, i, j, k, thisPlayer);
         }
-        if (i1 > 0 && Block.blocksList[i1].blockStrength(thisPlayer) >= 1.0F)
+        if (i1 > 0 && Block.blocksList[i1].blockStrength(thisWorld, thisPlayer, i, j, k) >= 1.0F)
         {
             blockHarvessted(i, j, k);
         }
@@ -120,7 +122,7 @@
             if (i1 != 0)
             {
                 Block block = Block.blocksList[i1];
-                float f = block.blockStrength(thisPlayer) * (float)(l + 1);
+                float f = block.blockStrength(thisWorld, thisPlayer, i, j, k) * (float)(l + 1);
                 if (f >= 0.7F)
                 {
                     blockHarvessted(i, j, k);
@@ -142,8 +144,13 @@
     {
         Block block = Block.blocksList[thisWorld.getBlockId(i, j, k)];
         int l = thisWorld.getBlockMetadata(i, j, k);
-        boolean flag = thisWorld.setBlockWithNotify(i, j, k, 0);
-        if (block != null && flag)
+        
+        if (block == null) 
+        {
+            return false;
+        }
+        boolean flag = block.removeBlockByPlayer(thisWorld, thisPlayer, i, j, k);
+        if (flag)
         {
             block.onBlockDestroyedByPlayer(thisWorld, i, j, k, l);
         }
@@ -152,6 +159,11 @@
 
     public boolean blockHarvessted(int i, int j, int k)
     {
+        ItemStack itemstack = thisPlayer.getCurrentEquippedItem();
+        if (itemstack != null && itemstack.getItem().onBlockStartBreak(itemstack, i, j, k, thisPlayer))
+        {
+            return false;   
+        }
         int l = thisWorld.getBlockId(i, j, k);
         int i1 = thisWorld.getBlockMetadata(i, j, k);
         thisWorld.playAuxSFXAtEntity(thisPlayer, 2001, i, j, k, l + thisWorld.getBlockMetadata(i, j, k) * 256);
@@ -162,8 +174,7 @@
         }
         else
         {
-            ItemStack itemstack = thisPlayer.getCurrentEquippedItem();
-            boolean flag1 = thisPlayer.canHarvestBlock(Block.blocksList[l]);
+            boolean flag1 = Block.blocksList[l].canHarvestBlock(thisPlayer, i1);
             if (itemstack != null)
             {
                 itemstack.onDestroyBlock(l, i, j, k, thisPlayer);
@@ -197,6 +208,7 @@
             if (itemstack1.stackSize == 0)
             {
                 entityplayer.inventory.mainInventory[entityplayer.inventory.currentItem] = null;
+                ForgeHooks.onDestroyCurrentItem(entityplayer,itemstack1);
             }
             return true;
         }
@@ -208,6 +220,14 @@
 
     public boolean activeBlockOrUseItem(EntityPlayer entityplayer, World world, ItemStack itemstack, int i, int j, int k, int l)
     {
+        if (itemstack != null) 
+        {
+            Item item = itemstack.getItem();
+            if (item.onItemUseFirst(itemstack, entityplayer, world, i, j, k, l)) 
+            {
+                return true;
+            }
+        }
         int i1 = world.getBlockId(i, j, k);
         if (i1 > 0 && Block.blocksList[i1].blockActivated(world, i, j, k, entityplayer))
         {
@@ -228,7 +248,15 @@
         }
         else
         {
-            return itemstack.useItem(entityplayer, world, i, j, k, l);
+            if (!itemstack.useItem(entityplayer, world, i, j, k, l))
+            {
+                return false;
+            }
+            if (itemstack.stackSize == 0)
+            {
+                ForgeHooks.onDestroyCurrentItem(entityplayer,itemstack);
+            }
+            return true;
         }
     }
 
