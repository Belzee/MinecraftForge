--- ../src_base/minecraft_server/net/minecraft/src/Chunk.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft_server/net/minecraft/src/Chunk.java	0000-00-00 00:00:00.000000000 -0000
@@ -3,6 +3,7 @@
 // Decompiler options: packimports(3) braces deadcode fieldsfirst 
 
 package net.minecraft.src;
+import net.minecraft.src.forge.*;
 
 import java.io.PrintStream;
 import java.util.*;
@@ -325,6 +326,13 @@
         }
         int i2 = xPosition * 16 + i;
         int j2 = zPosition * 16 + k;
+        
+        if (Block.blocksList[l1] instanceof IOverrideReplace){
+        	IOverrideReplace iovr = (IOverrideReplace)Block.blocksList[l1];
+        	if (!iovr.canReplaceBlock(worldObj, i, j, k, l))
+        		return iovr.getReplacedSuccess();
+        }
+        
         blocks[i << worldObj.field_35250_b | k << worldObj.worldYBits | j] = (byte)(byte0 & 0xff);
         if(l1 != 0)
         {
@@ -367,7 +375,7 @@
                 TileEntity tileentity = getChunkBlockTileEntity(i, j, k);
                 if(tileentity == null)
                 {
-                    tileentity = ((BlockContainer)Block.blocksList[l]).getBlockEntity();
+                    tileentity = ((BlockContainer)Block.blocksList[l]).getBlockEntity(i1);
                     worldObj.setBlockTileEntity(i, j, k, tileentity);
                 }
                 if(tileentity != null)
@@ -375,14 +383,6 @@
                     tileentity.func_35164_g();
                 }
             }
-        } else
-        if(l1 > 0 && (Block.blocksList[l1] instanceof BlockContainer))
-        {
-            TileEntity tileentity1 = getChunkBlockTileEntity(i, j, k);
-            if(tileentity1 != null)
-            {
-                tileentity1.func_35164_g();
-            }
         }
         isModified = true;
         return true;
@@ -404,10 +404,19 @@
         }
         int l1 = xPosition * 16 + i;
         int i2 = zPosition * 16 + k;
+        
+        if (Block.blocksList[l1] instanceof IOverrideReplace){
+        	IOverrideReplace iovr = (IOverrideReplace)Block.blocksList[l1];
+        	if (!iovr.canReplaceBlock(worldObj, i, j, k, l))
+        		return iovr.getReplacedSuccess();
+        }
+        
         blocks[i << worldObj.field_35250_b | k << worldObj.worldYBits | j] = (byte)(byte0 & 0xff);
         if(k1 != 0)
         {
-            Block.blocksList[k1].onBlockRemoval(worldObj, l1, j, i2);
+        	if (!worldObj.singleplayerWorld)
+        		Block.blocksList[k1].onBlockRemoval(worldObj, l1, j, i2);
+            worldObj.removeBlockTileEntity(l1, j, i2);
         }
         data.setNibble(i, j, k, 0);
         if(Block.lightOpacity[byte0 & 0xff] != 0)
@@ -435,7 +444,7 @@
                 TileEntity tileentity = getChunkBlockTileEntity(i, j, k);
                 if(tileentity == null)
                 {
-                    tileentity = ((BlockContainer)Block.blocksList[l]).getBlockEntity();
+                    tileentity = ((BlockContainer)Block.blocksList[l]).getBlockEntity(0);
                     worldObj.setBlockTileEntity(i, j, k, tileentity);
                 }
                 if(tileentity != null)
@@ -443,14 +452,6 @@
                     tileentity.func_35164_g();
                 }
             }
-        } else
-        if(k1 > 0 && (Block.blocksList[k1] instanceof BlockContainer))
-        {
-            TileEntity tileentity1 = getChunkBlockTileEntity(i, j, k);
-            if(tileentity1 != null)
-            {
-                tileentity1.func_35164_g();
-            }
         }
         isModified = true;
         return true;
@@ -586,6 +587,11 @@
     {
         ChunkPosition chunkposition = new ChunkPosition(i, j, k);
         TileEntity tileentity = (TileEntity)chunkTileEntityMap.get(chunkposition);
+        if(tileentity != null && tileentity.isInvalid())
+        {
+            chunkTileEntityMap.remove(chunkposition);
+            tileentity=null;
+        }
         if(tileentity == null)
         {
             int l = getBlockID(i, j, k);
@@ -595,18 +601,23 @@
             }
             if(tileentity == null)
             {
-                tileentity = ((BlockContainer)Block.blocksList[l]).getBlockEntity();
+                tileentity = ((BlockContainer)Block.blocksList[l]).getBlockEntity(getBlockMetadata(i,j,k));
                 worldObj.setBlockTileEntity(xPosition * 16 + i, j, zPosition * 16 + k, tileentity);
             }
             tileentity = (TileEntity)chunkTileEntityMap.get(chunkposition);
         }
-        if(tileentity != null && tileentity.isInvalid())
-        {
-            chunkTileEntityMap.remove(chunkposition);
-            return null;
-        } else
+	return tileentity;
+    }
+
+    /* FORGE: Used to remove only invalid TileEntities */
+    public void cleanChunkBlockTileEntity(int i, int j, int k)
+    {
+        ChunkPosition chunkposition = new ChunkPosition(i, j, k);
+        if(isChunkLoaded)
         {
-            return tileentity;
+            TileEntity tileentity = (TileEntity)chunkTileEntityMap.get(chunkposition);
+	    if(tileentity!=null && tileentity.isInvalid())
+		    chunkTileEntityMap.remove(chunkposition);
         }
     }
 
@@ -618,7 +629,7 @@
         setChunkBlockTileEntity(i, j, k, tileentity);
         if(isChunkLoaded)
         {
-            worldObj.loadedTileEntityList.add(tileentity);
+            worldObj.addTileEntity(tileentity);
         }
     }
 
@@ -634,6 +645,8 @@
             return;
         } else
         {
+	    TileEntity old=(TileEntity)chunkTileEntityMap.get(chunkposition);
+	    if(old!=null) old.invalidate();
             tileentity.validate();
             chunkTileEntityMap.put(chunkposition, tileentity);
             return;
